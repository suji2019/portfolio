{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/templates/blog-post.tsx"],"names":["MDXRenderer","require","module","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn","BlogPostTemplate","render","post","this","data","siteTitle","site","siteMetadata","title","pageContext","previous","next","location","frontmatter","description","excerpt","style","scale","display","marginBottom","rhythm","marginTop","date","body","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","Component","pageQuery"],"mappings":"iFAMA,IAAMA,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,qrECTf,IAAMG,EAAQF,EAAd,Q,EACkCA,EAAQ,QAAlCG,E,EAAAA,iBAAkBC,E,EAAAA,IAClBC,EAAgBL,EAAQ,QAAxBK,YAERJ,UAAiB,SAAqB,GAKlC,IAJFK,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,E,oIACF,sCACKC,EAAgBP,EAAtB,GACMQ,EAAWN,EAFhB,GAKKO,EAAMV,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMW,EAAS,GAGbX,MAHa,EAIbE,OAJF,GAQMU,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACV,EAlBJ,IAoBA,OAAON,EAAA,mBAA2BK,WAAYG,GAA9C,M,+5BC1BIS,E,gLACJC,OAAA,WACE,IAAMC,EAAOC,KAAKb,MAAMc,KAAKnB,IACvBoB,EAAYF,KAAKb,MAAMc,KAAKE,KAAKC,aAAaC,MAF7C,EAGoBL,KAAKb,MAAMmB,YAA9BC,EAHD,EAGCA,SAAUC,EAHX,EAGWA,KAElB,OACE,kBAAC,IAAD,CAAQC,SAAUT,KAAKb,MAAMsB,SAAUJ,MAAOH,GAC5C,kBAAC,IAAD,CACEG,MAAON,EAAKW,YAAYL,MACxBM,YAAaZ,EAAKW,YAAYC,aAAeZ,EAAKa,UAEpD,4BAAKb,EAAKW,YAAYL,OACtB,uBACEQ,MAAK,OACAC,aAAM,KADN,IAEHC,QAAS,QACTC,aAAcC,YAAO,GACrBC,UAAWD,aAAQ,MAGpBlB,EAAKW,YAAYS,MAEpB,kBAAC,cAAD,KAAcpB,EAAKqB,MACnB,wBACEP,MAAO,CACLG,aAAcC,YAAO,MAIzB,wBACEJ,MAAO,CACLE,QAAS,OACTM,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,4BACGjB,GACC,kBAAC,OAAD,CAAMkB,GAAE,QAAUlB,EAASmB,OAAOC,KAAQC,IAAI,QAA9C,KACKrB,EAASG,YAAYL,QAI9B,4BACGG,GACC,kBAAC,OAAD,CAAMiB,GAAE,QAAUjB,EAAKkB,OAAOC,KAAQC,IAAI,QACvCpB,EAAKE,YAAYL,MADpB,U,GAhDiBzB,IAAMiD,WA2DtBhC,YAER,IAAMiC,EAAY","file":"component---src-templates-blog-post-tsx-8c23410fa52a35652dff.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { rhythm, scale } from \"../utils/typography\";\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.mdx;\n    const siteTitle = this.props.data.site.siteMetadata.title;\n    const { previous, next } = this.props.pageContext;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <h1>{post.frontmatter.title}</h1>\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: `block`,\n            marginBottom: rhythm(1),\n            marginTop: rhythm(-1),\n          }}\n        >\n          {post.frontmatter.date}\n        </p>\n        <MDXRenderer>{post.body}</MDXRenderer>\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={`/blog${previous.fields.slug}`} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={`/blog${next.fields.slug}`} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      body\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}